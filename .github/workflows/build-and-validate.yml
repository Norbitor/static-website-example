# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build validate and test

on: [push, pull_request]

env:
  LIVE_URL: 'https://statwebsite.norbitor.net.pl'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Build and test
      run: | 
        npm ci
        npm run build --if-present
        npm test
    - name: Prepare production artifacts
      run:
        script/build-prod.sh
        rm -rf script
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: static-website-example-build
        path: .

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: build

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Get artifact
        uses: actions/download-artifact@v2
        with:
          name: static-website-example-build
      - name: List the directory
        run: ls -la
      - name: Deploy to S3
        uses: reggionick/s3-deploy@v3
        with:
            folder: .
            bucket: ${{ secrets.AWS_S3_BUCKET }}
            bucket-region: ${{ secrets.AWS_S3_BUCKET_REGION }}
            dist-id: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}

  quality:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Audit live URL
      uses: jakejarvis/lighthouse-action@master
      with:
        url: ${{ env.LIVE_URL }}
    - name: Upload results as an artifact
      uses: actions/upload-artifact@master
      with:
        name: report
        path: './report'
  
  security:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.5.0
      with:
        target: ${{ env.LIVE_URL }}
